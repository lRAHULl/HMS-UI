{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/bulk-create/bulk-create.component.html","src/app/create/create.component.html","src/app/display/display.component.html","src/app/display/doctors/doctors.component.html","src/app/display/patients/patients.component.html","src/app/display/update/update.component.html","src/app/display/user/user.component.html","src/app/header/header.component.html","src/app/login/login.component.html","src/app/play/child/child.component.html","src/app/play/parent/parent.component.html","src/app/sample-form/sample-form.component.html","src/app/shared/button/button.component.html","src/app/validators/custom-validator/custom-validator.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/bulk-create/bulk-create.component.scss","src/app/bulk-create/bulk-create.component.ts","src/app/create/create.component.scss","src/app/create/create.component.ts","src/app/display/display.component.scss","src/app/display/display.component.ts","src/app/display/doctors/doctors.component.scss","src/app/display/doctors/doctors.component.ts","src/app/display/patients/patients.component.scss","src/app/display/patients/patients.component.ts","src/app/display/update/update.component.scss","src/app/display/update/update.component.ts","src/app/display/user/user.component.scss","src/app/display/user/user.component.ts","src/app/header/header.component.scss","src/app/header/header.component.ts","src/app/login/login.component.scss","src/app/login/login.component.ts","src/app/models/doctor.model.ts","src/app/models/doctors.model.ts","src/app/play/child/child.component.scss","src/app/play/child/child.component.ts","src/app/play/parent/parent.component.scss","src/app/play/parent/parent.component.ts","src/app/sample-form/sample-form.component.scss","src/app/sample-form/sample-form.component.ts","src/app/secure.guard.ts","src/app/services/login.service.ts","src/app/services/token-interceptor.service.ts","src/app/services/user.service.ts","src/app/shared/button/button.component.scss","src/app/shared/button/button.component.ts","src/app/shared/shared.module.ts","src/app/validators/custom-validator/custom-validator.component.scss","src/app/validators/custom-validator/custom-validator.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAAA,wBAAA,CAAA,GAAA,EAAA;AACA;AACA;AACA,aAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,CAAA,GAAA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,kBAAA;AACA,cAAA,CAAA;AACE,OAJF,CAAA;AAKA;;AACA,IAAA,wBAAA,CAAA,IAAA,GAAA,YAAA;AAA4C,aAAA,EAAA;AAAW,KAAvD;;AACA,IAAA,wBAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,MAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,wBAAA,CAAA,EAAA,GAAA,yCAAA;;;;;;;;;;;;;;;;ACZA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4DAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,w1PAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,s8FAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ouDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+kDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,glDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,uVAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,mdAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kxDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,sHAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qLAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kxBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,uHAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,gBAAA,EAAA,YAAA;AAAA,aAAA,cAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,eAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,sBAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;;;;;;;;;;;;;AAcA;;;AAEA,QAAA,cAAA,GAAA,uBAAA,CAAA,EAAA,CAAA,EAAA;AACA,MAAA,cAAA,GAAA,MAAA,CAAA,cAAA,IACA;AAAU,QAAA,SAAA,EAAA;AAAV,mBAA0B,KAA1B,IAA0B,UAAA,CAAA,EAAA,CAAA,EAAA;AAAsC,QAAA,CAAA,CAAA,SAAA,GAAA,CAAA;AAAmB,OADnF,IAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,aAAA,IAAA,CAAA,IAAA,CAAA;AAAA,cAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AAAuD,OAFhF;;AAGA,aAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KALA;;AAOO,aAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,MAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACA,eAAA,EAAA,GAAA;AAAmB,aAAA,WAAA,GAAA,CAAA;AAAsB;;AACzC,MAAA,CAAA,CAAA,SAAA,GAAA,CAAA,KAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,SAAA,GAAA,CAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA;AACA;;AAEO,QAAA,OAAA,GAAA,oBAAA;AACP,MAAA,OAAA,GAAA,MAAA,CAAA,MAAA,IAAA,SAAA,QAAA,CAAA,CAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAgD,CAAA,GAAA,CAAhD,EAAuD,CAAA,EAAvD,EAAuD;AACvD,UAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,eAAA,IAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AACA,eAAA,CAAA;AACA,OANA;;AAOA,aAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AACA,KATO;;AAWA,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,UAAA,CAAA,IAAA,IAAA,IAAA,OAAA,MAAA,CAAA,qBAAA,KAAA,UAAA,EACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,EAA4D,CAAA,GAAA,CAAA,CAAA,MAA5D,EAA0E,CAAA,EAA1E,EAA0E;AAC1E,YAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA;;AAEO,aAAA,UAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA,SAAA,CAAA,MAAA;AAAA,UAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AAAA,UAAA,CAAA;AACA,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,KACA,KAAA,IAAA,CAAA,GAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA4C,CAAA,IAAA,CAA5C,EAAoD,CAAA,EAApD;AAAoD,YAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,KAAA,CAAA;AAApD;AACA,aAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AAEO,aAAA,OAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACP,aAAA,UAAA,MAAA,EAAA,GAAA,EAAA;AAAmC,QAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAA,UAAA,CAAA;AAAoC,OAAvE;AACA;;AAEO,aAAA,UAAA,CAAA,WAAA,EAAA,aAAA,EAAA;AACP,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,OAAA,OAAA,CAAA,QAAA,CAAA,WAAA,EAAA,aAAA,CAAA;AACA;;AAEO,aAAA,SAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAAA;AACP,aAAA,KAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA;AAAmC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AAA+B,WAArC,CAAqC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACjG,iBAAA,QAAA,CAAA,KAAA,EAAA;AAAkC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAmC,WAAzC,CAAyC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACpG,iBAAA,IAAA,CAAA,MAAA,EAAA;AAA+B,UAAA,MAAA,CAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA,CAAA,CAAA,UAAA,OAAA,EAAA;AAAiE,YAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAyB,WAA1F,EAA0F,IAA1F,CAA0F,SAA1F,EAA0F,QAA1F,CAAA;AAAsH;;AACrJ,QAAA,IAAA,CAAA,CAAA,SAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AACK,OALL,CAAA;AAMA;;AAEO,aAAA,WAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA;AAAa,QAAA,KAAA,EAAA,CAAb;AAAa,QAAA,IAAA,EAAA,gBAAA;AAA6B,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAA0B,iBAAA,CAAA,CAAA,CAAA,CAAA;AAAe,SAAnF;AAAmF,QAAA,IAAA,EAAA,EAAnF;AAAmF,QAAA,GAAA,EAAA;AAAnF,OAAA;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AACA,aAAA,CAAA,GAAA;AAAgB,QAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,iBAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,kBAAA,IAAA,CAAA,CAAA;AAAhB,OAAA,EAAqE,OAAA,MAAA,KAAA,UAAA,KAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAoE,eAAA,IAAA;AAAe,OAAnF,CAArE,EAAwJ,CAAxJ;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,eAAA,UAAA,CAAA,EAAA;AAAsB,iBAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAqB,SAA3C;AAA8C;;AACpE,eAAA,IAAA,CAAA,EAAA,EAAA;AACA,YAAA,CAAA,EAAA,MAAA,IAAA,SAAA,CAAA,iCAAA,CAAA;;AACA,eAAA,CAAA;AAAA,cAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA;;AACA,oBAAA,EAAA,CAAA,CAAA,CAAA;AACA,mBAAA,CAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,CAAA,GAAA,EAAA;AAAuC;;AACvC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,uBAAA;AAAS,kBAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAT;AAAS,kBAAA,IAAA,EAAA;AAAT,iBAAA;;AAClC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,gBAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAW,gBAAA,EAAA,GAAA,CAAA,CAAA,CAAA;AAAU;;AACvD,mBAAA,CAAA;AAAA,gBAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA;;AAAyC,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAc;;AACvD;AACA,oBAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAA6G,kBAAA,CAAA,GAAA,CAAA;AAAO;AAAU;;AAC9H,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAgF,kBAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAiB;AAAO;;AACxG,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAwD,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAgB,kBAAA,CAAA,GAAA,EAAA;AAAQ;AAAO;;AACvF,oBAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAA8C,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAAgB,kBAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;;AAAgB;AAAO;;AACrF,oBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAiC;AAXjC;;AAaA,YAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACS,WAjBT,CAiBS,OAAA,CAAA,EAAA;AAAY,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAa,YAAA,CAAA,GAAA,CAAA;AAAS,WAjB3C,SAiB2C;AAAU,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAW;AAjBhE;;AAkBA,YAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAAmC,eAAA;AAAS,UAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAT;AAAS,UAAA,IAAA,EAAA;AAAT,SAAA;AACnC;AACA;;AAEO,aAAA,YAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACP,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AAEO,aAAA,QAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AACA,iBAAA;AAAoB,YAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA;AAApB,WAAA;AACA;AAJA,OAAA;AAMA;;AAEO,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,CAAA;;AACA,UAAA;AACA,eAAA,CAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,EAAA,IAAA;AAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA;AAAA;AACA,OAFA,CAGA,OAAA,KAAA,EAAA;AAAmB,QAAA,CAAA,GAAA;AAAM,UAAA,KAAA,EAAA;AAAN,SAAA;AAAsB,OAHzC,SAIA;AACA,YAAA;AACA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAFA,SAGA;AAAiB,cAAA,CAAA,EAAA,MAAA,CAAA,CAAA,KAAA;AAAsB;AACvC;;AACA,aAAA,EAAA;AACA;;AAEO,aAAA,QAAA,GAAA;AACP,WAAA,IAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,EAA4B,CAAA,GAAA,SAAA,CAAA,MAA5B,EAAkD,CAAA,EAAlD;AACA,QAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,aAAA,EAAA;AACA;;AAEO,aAAA,cAAA,GAAA;AACP,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAiD,CAAA,GAAA,EAAjD,EAAyD,CAAA,EAAzD;AAAyD,QAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AAAzD;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAwC,CAAA,GAAA,EAAxC,EAAgD,CAAA,EAAhD;AACA,aAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA,MAAA,EAAwD,CAAA,GAAA,EAAxD,EAAgE,CAAA,IAAA,CAAA,EAAhE;AACA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;AADA;;AAGA,aAAA,CAAA;AACA;;AAAA;;AAEO,aAAA,OAAA,CAAA,CAAA,EAAA;AACP,aAAA,gBAAA,OAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,IAAA,IAAA,IAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AAEO,aAAA,gBAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,CAAjB,EAAiB,IAAA,CAAA,QAAA,CAAjB,EAAiB,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAtH,EAAsH,CAAtH;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAAgC,iBAAA,IAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAqC,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAA4C,WAAjF,CAAA;AAAmF,SAAnH;AAAsH;;AAC5I,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA;AAAM,UAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAiB,SAAvB,CAAuB,OAAA,CAAA,EAAA;AAAY,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAsB;AAAA;;AACpF,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,KAAA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAoG;;AAC1H,eAAA,OAAA,CAAA,KAAA,EAAA;AAA6B,QAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA;AAAuB;;AACpD,eAAA,MAAA,CAAA,KAAA,EAAA;AAA4B,QAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAwB;;AACpD,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAyD;AACpF;;AAEO,aAAA,gBAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAA4C,cAAA,CAAA;AAAW,OAAvD,CAAjB,EAAwE,IAAA,CAAA,QAAA,CAAxE,EAAwE,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAqD,eAAA,IAAA;AAAe,OAA5I,EAA4I,CAA5I;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAA6B,iBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA;AAAoB,YAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA,KAAA;AAApB,WAAA,GAAoE,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAApE;AAAsF,SAAnH,GAAmH,CAAnH;AAAwH;AACjJ;;AAEO,aAAA,aAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AAAA,UAAA,CAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,OAAA,QAAA,KAAA,UAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAA2G,IAAA,CAAA,MAAA,CAA3G,EAA2G,IAAA,CAAA,OAAA,CAA3G,EAA2G,IAAA,CAAA,QAAA,CAA3G,EAA2G,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAhN,EAAgN,CAAhN,CAAA;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,EAAA;AAA8B,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAAgD,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,KAAA,CAAA;AAAyD,WAAzG,CAAA;AAA2G,SAAzI;AAA4I;;AAClK,eAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AAA4C,QAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AAAsC,UAAA,OAAA,CAAA;AAAU,YAAA,KAAA,EAAA,CAAV;AAAU,YAAA,IAAA,EAAA;AAAV,WAAA,CAAA;AAAkC,SAAxE,EAAwE,MAAxE;AAAkF;AAC9H;;AAEO,aAAA,oBAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACP,UAAA,MAAA,CAAA,cAAA,EAAA;AAAgC,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,KAAA,EAAA;AAAuC,UAAA,KAAA,EAAA;AAAvC,SAAA;AAAwD,OAAxF,MAAwF;AAAO,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA;AAAkB;;AACjH,aAAA,MAAA;AACA;;AAAA;;AAEO,aAAA,YAAA,CAAA,GAAA,EAAA;AACP,UAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA,OAAA,GAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,IAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAAA,GAAA;AAAA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,GAAA;AACA,aAAA,MAAA;AACA;;AAEO,aAAA,eAAA,CAAA,GAAA,EAAA;AACP,aAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,GAAA;AAA4C,QAAA,OAAA,EAAA;AAA5C,OAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrLA,QAAM,MAAM,GAAW,CACrB;AAAC,MAAA,IAAI,EAAE,OAAP;AAAgB,MAAA,SAAS,EAAE,mDAAA,CAAA,gBAAA;AAA3B,KADqB,EAErB;AACE,MAAA,IAAI,EAAE,SADR;AAEE,MAAA,SAAS,EAAE,uDAAA,CAAA,kBAAA,CAFb;AAGE,MAAA,WAAW,EAAE,CAAC,0CAAA,CAAA,aAAA,CAAD,CAHf;AAIE,MAAA,QAAQ,EAAE,CACR;AAAC,QAAA,IAAI,EAAE,SAAP;AAAkB,QAAA,SAAS,EAAE,gEAAA,CAAA,kBAAA;AAA7B,OADQ,EAER;AAAC,QAAA,IAAI,EAAE,UAAP;AAAmB,QAAA,SAAS,EAAE,kEAAA,CAAA,mBAAA;AAA9B,OAFQ;AAJZ,KAFqB,EAWrB;AAAC,MAAA,IAAI,EAAE,MAAP;AAAe,MAAA,SAAS,EAAE,0DAAA,CAAA,iBAAA;AAA1B,KAXqB,EAYrB;AAAC,MAAA,IAAI,EAAE,0BAAP;AAAmC,MAAA,SAAS,EAAE,6DAAA,CAAA,iBAAA,CAA9C;AAA+D,MAAA,WAAW,EAAE,CAAC,0CAAA,CAAA,aAAA,CAAD;AAA5E,KAZqB,EAarB;AAAC,MAAA,IAAI,EAAE,mBAAP;AAA4B,MAAA,SAAS,EAAE,yDAAA,CAAA,eAAA,CAAvC;AAAsD,MAAA,WAAW,EAAE,CAAC,0CAAA,CAAA,aAAA,CAAD;AAAnE,KAbqB,EAcrB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,SAAS,EAAE,qDAAA,CAAA,iBAAA;AAAlC,KAdqB,CAAvB;;AAqBA,QAAa,gBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,OAAb,CAAqB,MAArB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACnCb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,YAAb,GALA,wBAAA;AAAA;;AAME,WAAA,KAAA,GAAQ,QAAR;AACD,KAFD;;AAAa,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0EAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqDb,QAAa,SAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAnCrB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CACZ,2CAAA,CAAA,cAAA,CADY,EAEZ,qDAAA,CAAA,iBAAA,CAFY,EAGZ,mDAAA,CAAA,gBAAA,CAHY,EAIZ,uDAAA,CAAA,kBAAA,CAJY,EAKZ,0DAAA,CAAA,eAAA,CALY,EAMZ,8DAAA,CAAA,iBAAA,CANY,EAOZ,sDAAA,CAAA,iBAAA,CAPY,EAQZ,gEAAA,CAAA,qBAAA,CARY,EASZ,gEAAA,CAAA,qBAAA,CATY,EAUZ,qFAAA,CAAA,0BAAA,CAVY,EAWZ,2DAAA,CAAA,iBAAA,CAXY,EAYZ,yDAAA,CAAA,gBAAA,CAZY,EAaZ,gEAAA,CAAA,kBAAA,CAbY,EAcZ,kEAAA,CAAA,mBAAA,CAdY,CADN;AAiBR,MAAA,OAAO,EAAE,CACP,sDAAA,CAAA,eAAA,CADO,EAEP,gDAAA,CAAA,kBAAA,CAFO,EAGP,2CAAA,CAAA,aAAA,CAHO,EAIP,iDAAA,CAAA,kBAAA,CAJO,EAKP,2CAAA,CAAA,qBAAA,CALO,EAMP,mDAAA,CAAA,cAAA,CANO,EAOP,wDAAA,CAAA,WAAA,CAAA,CAAU,OAAV,EAPO,CAjBD;AA0BR,MAAA,SAAS,EAAE,CACT;AACE,QAAA,OAAO,EAAE,iDAAA,CAAA,mBAAA,CADX;AAEE,QAAA,QAAQ,EAAE,iEAAA,CAAA,yBAAA,CAFZ;AAGE,QAAA,KAAK,EAAE;AAHT,OADS,CA1BH;AAiCR,MAAA,SAAS,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AAjCH,KAAT,CAmCqB,CAAA,EAAT,SAAS,CAAT;;;;;;;;;;;;;;;;AC5Db,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,mBAAb;AAAA;AAAA;AAEE,qCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,8FAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACPb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gmEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,eAAb;AAAA;AAAA;AAQE,+BAAoB,MAApB,EAAoD,WAApD,EAAsF,KAAtF,EAA6G,EAA7G,EAA4H;AAAA;;AAAxG,aAAA,MAAA,GAAA,MAAA;AAAgC,aAAA,WAAA,GAAA,WAAA;AAAkC,aAAA,KAAA,GAAA,KAAA;AAAuB,aAAA,EAAA,GAAA,EAAA;AAAoB;;AARnI;AAAA;AAAA,mCAUU;AAAA;;AACN,eAAK,MAAL,CAAY,MAAZ,CAAmB,SAAnB,CAA6B,UAAA,UAAU;AAAA,mBAAI,KAAI,CAAC,IAAL,GAAY,UAAU,CAAC,IAA3B;AAAA,WAAvC;;AACA,cAAI,KAAK,IAAL,KAAc,QAAlB,EAA4B;AAC1B,iBAAK,MAAL,GAAc,IAAI,iDAAA,CAAA,QAAA,CAAJ,EAAd;AACA,iBAAK,QAAL,GAAgB,KAAK,EAAL,CAAQ,KAAR,CAAc;AAC5B,cAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADkB;AAE5B,cAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFkB;AAG5B,cAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHiB;AAI5B,cAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJkB;AAK5B,cAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CALuB;AAM5B,cAAA,oBAAoB,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CANM;AAO5B,cAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAPgB,aAAd,CAAhB;AASD,WAXD,MAWO,IAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AAClC,iBAAK,OAAL,GAAe,IAAI,kDAAA,CAAA,SAAA,CAAJ,EAAf;AAEA,iBAAK,QAAL,GAAgB,KAAK,EAAL,CAAQ,KAAR,CAAc;AAC5B,cAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CACb,2CAAA,CAAA,YAAA,CAAA,CAAW,QADE,EAEb,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAFa,EAGb,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAHa,CAAL,CADkB;AAM5B,cAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CACb,2CAAA,CAAA,YAAA,CAAA,CAAW,QADE,EAEb,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,mDAAnB,CAFa,CAAL,CANkB;AAU5B,cAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAViB;AAW5B,cAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAXkB;AAY5B,cAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAZuB;AAa5B,cAAA,aAAa,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAba;AAc5B,cAAA,aAAa,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAda;AAe5B,cAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAfoB;AAgB5B,cAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAhBsB;AAiB5B,cAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAjBoB;AAkB5B,cAAA,UAAU,EAAE,CAAC,EAAD,EAAK,CACf,2CAAA,CAAA,YAAA,CAAA,CAAW,QADI,EAEf,oFAAA,CAAA,0BAAA,CAAA,CAAyB,kBAFV,CAAL;AAlBgB,aAAd,CAAhB;AAuBD;AACF;AAlDH;AAAA;AAAA,mCAwGU;AACN,UAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACD;AA1GH;AAAA;AAAA,uCA4Gc;AAAA;;AACV,cAAM,MAAM,GAAG,KAAK,QAAL,CAAc,KAA7B;AAEA,eAAK,MAAL,CAAY,QAAZ,GAAuB,MAAM,CAAC,QAA9B;AACA,eAAK,MAAL,CAAY,QAAZ,GAAuB,MAAM,CAAC,QAA9B;AACA,eAAK,MAAL,CAAY,SAAZ,GAAwB,MAAM,CAAC,SAA/B;AACA,eAAK,MAAL,CAAY,QAAZ,GAAuB,MAAM,CAAC,QAA9B;AACA,eAAK,MAAL,CAAY,GAAZ,GAAkB,MAAM,CAAC,GAAzB;AACA,eAAK,MAAL,CAAY,oBAAZ,GAAmC,MAAM,CAAC,oBAA1C;AACA,eAAK,MAAL,CAAY,UAAZ,GAAyB,MAAM,CAAC,UAAhC;AAEA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,MAAjB;AACA,eAAK,WAAL,CAAiB,YAAjB,CAA8B,KAAK,MAAnC,EAA2C,SAA3C,CAAqD,UAAA,IAAI,EAAG;AAC1D,YAAA,MAAI,CAAC,GAAL,GAAW,IAAX;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,iBAAzB;AACD,WAHD;AAIA,UAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACD;AA7HH;AAAA;AAAA,wCA+He;AAAA;;AACX,cAAM,MAAM,GAAG,KAAK,QAAL,CAAc,KAA7B;AAEA,eAAK,OAAL,CAAa,QAAb,GAAwB,MAAM,CAAC,QAA/B;AACA,eAAK,OAAL,CAAa,QAAb,GAAwB,MAAM,CAAC,QAA/B;AACA,eAAK,OAAL,CAAa,SAAb,GAAyB,MAAM,CAAC,SAAhC;AACA,eAAK,OAAL,CAAa,QAAb,GAAwB,MAAM,CAAC,QAA/B;AACA,eAAK,OAAL,CAAa,GAAb,GAAmB,MAAM,CAAC,GAA1B;AACA,eAAK,OAAL,CAAa,aAAb,GAA6B,MAAM,CAAC,aAApC;AACA,eAAK,OAAL,CAAa,aAAb,GAA6B,MAAM,CAAC,aAApC;AACA,eAAK,OAAL,CAAa,MAAb,GAAsB,MAAM,CAAC,MAA7B;AACA,eAAK,OAAL,CAAa,IAAb,GAAoB,MAAM,CAAC,IAA3B;AACA,eAAK,OAAL,CAAa,MAAb,GAAsB,MAAM,CAAC,MAA7B;AACA,eAAK,OAAL,CAAa,UAAb,GAA0B,MAAM,CAAC,UAAjC,EAA6C,EAA7C;AAEA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,OAAjB;AACA,eAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAK,OAApC,EAA6C,SAA7C,CAAuD,UAAA,IAAI,EAAG;AAC1D,YAAA,MAAI,CAAC,GAAL,GAAW,IAAX;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,mBAAzB;AACD,WAHH;AAIA,UAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACD;AApJH;AAAA;AAAA,2CAsJqB,CAtJrB,EAsJiC;AAC7B,cAAM,gBAAgB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,KAA5C,CAAzB;AAEA,iBAAO,gBAAgB,CAAC,QAAjB,CAA0B,CAAC,CAAC,KAA5B,IAAqC,IAArC,GAA4C;AACjD,YAAA,kBAAkB,EAAE;AAClB,cAAA,KAAK,EAAE;AADW;AAD6B,WAAnD;AAKD;AA9JH;AAAA;AAAA,4BAoDc;AACV,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAlB,CAAP;AACD;AAtDH;AAAA;AAAA,4BAwDc;AACV,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAlB,CAAP;AACD;AA1DH;AAAA;AAAA,4BA4De;AACX,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,WAAlB,CAAP;AACD;AA9DH;AAAA;AAAA,4BAgEc;AACV,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAlB,CAAP;AACD;AAlEH;AAAA;AAAA,4BAoES;AACL,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,KAAlB,CAAP;AACD;AAtEH;AAAA;AAAA,4BAwE0B;AACtB,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,sBAAlB,CAAP;AACD;AA1EH;AAAA;AAAA,4BA4EgB;AACZ,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,YAAlB,CAAP;AACD;AA9EH;AAAA;AAAA,4BAgFmB;AACf,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,eAAlB,CAAP;AACD;AAlFH;AAAA;AAAA,4BAoFmB;AACf,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,eAAlB,CAAP;AACD;AAtFH;AAAA;AAAA,4BAwFY;AACR,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB,CAAP;AACD;AA1FH;AAAA;AAAA,4BA4FU;AACN,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,UAAlB,CAAP;AACD;AA9FH;AAAA;AAAA,4BAgGY;AACR,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,QAAlB,CAAP;AACD;AAlGH;AAAA;AAAA,4BAoGgB;AACZ,iBAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,YAAlB,CAAP;AACD;AAtGH;;AAAA;AAAA,OAAA;;;;cAQ8B,4CAAA,CAAA,gBAAA;;cAAqC,mDAAA,CAAA,aAAA;;cAA4B,4CAAA,CAAA,QAAA;;cAAoB,2CAAA,CAAA,aAAA;;;;AARtG,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gqDAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,gBAAb;AAAA;AAAA;AAQE,gCACU,YADV,EAEU,WAFV,EAGU,MAHV,EAGwB;AAAA;;AAFd,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,MAAA,GAAA,MAAA;AANV,aAAA,QAAA,GAAmB,KAAK,YAAL,CAAkB,QAArC;AACA,aAAA,QAAA,GAAmB,KAAK,YAAL,CAAkB,QAArC;AAMI;;AAZN;AAAA;AAAA,mCAcU,CAEP;AAhBH;;AAAA;AAAA,OAAA;;;;cAS0B,oDAAA,CAAA,cAAA;;cACD,mDAAA,CAAA,aAAA;;cACL,4CAAA,CAAA,QAAA;;;;AAXP,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACVb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4sDAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,gBAAb;AAAA;AAAA;AAME,gCACU,WADV,EAEU,MAFV,EAEwB;AAAA;;AADd,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAJV,aAAA,IAAA,GAAO,YAAP;AAKK;;AATP;AAAA;AAAA,mCAWU;AACN,eAAK,UAAL;AACD;AAbH;AAAA;AAAA,uCAec;AACV,eAAK,MAAL,CAAY,aAAZ,CAA0B,eAA1B;AACD;AAjBH;AAAA;AAAA,qCAmBY;AAAA;;AACR,eAAK,WAAL,CAAiB,UAAjB,GAA8B,SAA9B,CAAwC,UAAA,IAAI,EAAG;AAC7C,YAAA,MAAI,CAAC,OAAL,GAAe,IAAf;AACD,WAFD;AAGD;AAvBH;AAAA;AAAA,qCAyBe,MAzBf,EAyBqB;AAAA;;AACjB,cAAM,OAAO,GAAG,MAAM,0DAC8B,MAD9B,0BAAtB;;AAGA,cAAI,OAAO,CAAC,WAAR,OAA0B,KAA9B,EAAqC;AACnC,iBAAK,WAAL,CAAiB,YAAjB,CAA8B,MAA9B,EAAsC,SAAtC,CAAgD,UAAA,IAAI,EAAG;AACrD,cAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;;AACA,cAAA,MAAI,CAAC,UAAL;AACD,aAHD;AAID;AACF;AAnCH;;AAAA;AAAA,OAAA;;;;cAOyB,0DAAA,CAAA,aAAA;;cACL,4CAAA,CAAA,QAAA;;;;AARP,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,8FAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,iBAAb;AAAA;AAAA;AAIE,iCACU,WADV,EAEU,MAFV,EAEwB;AAAA;;AADd,aAAA,WAAA,GAAA,WAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACL;;AAPP;AAAA;AAAA,mCASU;AACN,eAAK,WAAL;AACD;AAXH;AAAA;AAAA,wCAae;AACX,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;AAfH;AAAA;AAAA,sCAiBa;AAAA;;AACT,eAAK,WAAL,CAAiB,WAAjB,GAA+B,SAA/B,CAAyC,UAAA,IAAI,EAAG;AAC9C,YAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB;AACD,WAFD;AAGD;AArBH;AAAA;AAAA,sCAuBgB,MAvBhB,EAuBsB;AAAA;;AAClB,cAAM,OAAO,GAAG,MAAM,2DAC+B,MAD/B,0BAAtB;;AAGA,cAAI,OAAO,CAAC,WAAR,OAA0B,KAA9B,EAAqC;AACnC,iBAAK,WAAL,CAAiB,aAAjB,CAA+B,MAA/B,EAAuC,SAAvC,CAAiD,UAAA,IAAI,EAAG;AACtD,cAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;;AACA,cAAA,MAAI,CAAC,WAAL;AACD,aAHD;AAID;AACF;AAjCH;;AAAA;AAAA,OAAA;;;;cAKyB,0DAAA,CAAA,aAAA;;cACL,4CAAA,CAAA,QAAA;;;;AANP,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACVb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,eAAb;AAAA;AAAA;AAEE,+BAAoB,WAApB,EAAsD,MAAtD,EAAsF,KAAtF,EAA6G,EAA7G,EAA4H;AAAA;;AAAxG,aAAA,WAAA,GAAA,WAAA;AAAkC,aAAA,MAAA,GAAA,MAAA;AAAgC,aAAA,KAAA,GAAA,KAAA;AAAuB,aAAA,EAAA,GAAA,EAAA;AAK7G,aAAA,GAAA,GAAW,IAAX;AALiI;;AAFnI;AAAA;AAAA,mCAUU;AAAA;;AACN,eAAK,MAAL,CAAY,MAAZ,CAAmB,SAAnB,CAA6B,UAAA,UAAU,EAAG;AACxC,YAAA,MAAI,CAAC,MAAL,GAAc,UAAU,CAAC,EAAzB;AACA,YAAA,MAAI,CAAC,IAAL,GAAY,UAAU,CAAC,IAAvB;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,MAAjB;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,IAAjB;;AAEA,gBAAI,MAAI,CAAC,IAAL,CAAU,WAAV,OAA4B,SAA5B,IAAyC,MAAI,CAAC,IAAL,CAAU,WAAV,OAA4B,QAAzE,EAAmF;AACjF,cAAA,MAAI,CAAC,WAAL,CAAiB,aAAjB,CAA+B,MAAI,CAAC,MAAL,CAAY,QAAZ,EAA/B,EAAuD,SAAvD,CAAiE,UAAA,IAAI,EAAG;AACtE,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,gBAAA,MAAI,CAAC,cAAL,GAAsB,MAAI,CAAC,EAAL,CAAQ,KAAR,CAAc;AAClC,kBAAA,QAAQ,EAAE,IAAI,CAAC,QADmB;AAElC,kBAAA,QAAQ,EAAE,IAAI,CAAC,QAFmB;AAGlC,kBAAA,GAAG,EAAE,IAAI,CAAC,GAHwB;AAIlC,kBAAA,oBAAoB,EAAE,IAAI,CAAC,oBAJO;AAKlC,kBAAA,UAAU,EAAE,IAAI,CAAC;AALiB,iBAAd,CAAtB;AAOD,eATD;AAUD,aAXD,MAWO,IAAK,MAAI,CAAC,IAAL,CAAU,WAAV,OAA4B,UAA5B,IAA0C,MAAI,CAAC,IAAL,CAAU,WAAV,OAA4B,SAA3E,EAAuF;AAC5F,cAAA,MAAI,CAAC,WAAL,CAAiB,cAAjB,CAAgC,MAAI,CAAC,MAAL,CAAY,QAAZ,EAAhC,EAAwD,SAAxD,CAAkE,UAAA,IAAI,EAAG;AACvE,gBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,gBAAA,MAAI,CAAC,cAAL,GAAsB,MAAI,CAAC,EAAL,CAAQ,KAAR,CAAc;AAClC,kBAAA,QAAQ,EAAE,IAAI,CAAC,QADmB;AAElC,kBAAA,QAAQ,EAAE,IAAI,CAAC,QAFmB;AAGlC,kBAAA,GAAG,EAAE,IAAI,CAAC,GAHwB;AAIlC,kBAAA,aAAa,EAAE,IAAI,CAAC,aAJc;AAKlC,kBAAA,aAAa,EAAE,IAAI,CAAC;AALc,iBAAd,CAAtB;AAOD,eATD;AAUD;AACF,WA7BD,EADM,CAgCN;AACD;AA3CH;AAAA;AAAA,uCA6Cc;AAAA;;AACV,cAAM,MAAM,GAAG,KAAK,cAAL,CAAoB,KAAnC;AACA,eAAK,IAAL,GAAY,IAAI,wDAAA,CAAA,QAAA,CAAJ,EAAZ;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,MAAM,CAAC,QAA5B;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,MAAM,CAAC,QAA5B;AACA,eAAK,IAAL,CAAU,GAAV,GAAgB,MAAM,CAAC,GAAvB;AACA,eAAK,IAAL,CAAU,oBAAV,GAAiC,MAAM,CAAC,oBAAxC;AACA,eAAK,IAAL,CAAU,UAAV,GAAuB,MAAM,CAAC,UAA9B;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,CAArB;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,KAAK,MAA1B;AAEA,UAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB;AAEA,eAAK,WAAL,CAAiB,YAAjB,CAA8B,KAAK,IAAnC,EAAmD,SAAnD,CAA6D,UAAA,IAAI,EAAG;AAClE,YAAA,MAAI,CAAC,GAAL,GAAW,IAAX;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,iBAAzB;AACD,WAHD;AAID;AA/DH;AAAA;AAAA,wCAiEe;AAAA;;AACX,cAAM,MAAM,GAAG,KAAK,cAAL,CAAoB,KAAnC;AACA,eAAK,IAAL,GAAY,IAAI,yDAAA,CAAA,SAAA,CAAJ,EAAZ;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,MAAM,CAAC,QAA5B;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,MAAM,CAAC,QAA5B;AACA,eAAK,IAAL,CAAU,GAAV,GAAgB,MAAM,CAAC,GAAvB;AACA,eAAK,IAAL,CAAU,aAAV,GAA0B,MAAM,CAAC,aAAjC;AACA,eAAK,IAAL,CAAU,aAAV,GAA0B,MAAM,CAAC,aAAjC;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,CAArB;AACA,eAAK,IAAL,CAAU,QAAV,GAAqB,KAAK,MAA1B;AAEA,UAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,IAAjB;AAEA,eAAK,WAAL,CAAiB,aAAjB,CAA+B,KAAK,IAApC,EAAqD,SAArD,CAA+D,UAAA,IAAI,EAAG;AACpE,YAAA,OAAI,CAAC,GAAL,GAAW,IAAX;;AACA,YAAA,OAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,kBAAzB;AACD,WAHD;AAID;AAnFH;;AAAA;AAAA,OAAA;;;;cAEmC,0DAAA,CAAA,aAAA;;cAA6B,4CAAA,CAAA,gBAAA;;cAA+B,4CAAA,CAAA,QAAA;;cAAoB,2CAAA,CAAA,aAAA;;;;AAFtG,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4FAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,aAAb;AAAA;AAAA;AAIE,+BAAA;AAAA;AAAiB;;AAJnB;AAAA;AAAA,mCAMU,CACP;AAPH;;AAAA;AAAA,OAAA;;AAEW,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,uBAAA,E,MAAA,E,KAAU,CAAV;AAFE,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6LAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,eAAb;AAAA;AAAA;AAEE,+BAAoB,KAApB,EAAuC;AAAA;;AAAnB,aAAA,KAAA,GAAA,KAAA;AAAwB;;AAF9C;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;;;cAE6B,oDAAA,CAAA,cAAA;;;;AAFhB,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,soEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,cAAb;AAAA;AAAA;AAIE,8BAAoB,YAApB,EAAwD,MAAxD,EAAsE;AAAA;;AAAlD,aAAA,YAAA,GAAA,YAAA;AAAoC,aAAA,MAAA,GAAA,MAAA;AAAmB;;AAJ7E;AAAA;AAAA,mCAMU,CACP;AAPH;AAAA;AAAA,gCASO;AACH,eAAK,YAAL,CAAkB,QAAlB,GAA6B,KAAK,QAAlC;AACA,eAAK,YAAL,CAAkB,QAAlB,GAA6B,KAAK,QAAlC;AACA,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;AAbH;;AAAA;AAAA,OAAA;;;;cAIoC,oDAAA,CAAA,cAAA;;cAA8B,4CAAA,CAAA,QAAA;;;;AAJrD,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCTA,M;;;;;;;;;;;;;;;;;;;ACAb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA,C,CAAA;;;QAEa,O;;;;QAKA,M;;;;QAcA,O;;;;;;;;;;;;;;;;;;;ACrBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,cAAb;AAAA;AAAA;AAKE,gCAAA;AAAA;;AAFU,aAAA,OAAA,GAAU,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAV;AAEO;;AALnB;AAAA;AAAA,mCAOU,CACP;AARH;AAAA;AAAA,sCAUa;AACT,eAAK,OAAL,CAAa,IAAb,CAAkB,KAAK,OAAvB;AACD;AAZH;;AAAA;AAAA,OAAA;;AAEW,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,wBAAA,E,SAAA,E,KAAgB,CAAhB;AACC,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,wBAAA,E,SAAA,E,KAAqC,CAArC;AAHC,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,eAAb;AAAA;AAAA;AAKE,iCAAA;AAAA;AAAiB;;AALnB;AAAA;AAAA,mCAOU,CACP;AARH;AAAA;AAAA,gCAUU,MAVV,EAUgB;AACZ,eAAK,YAAL,GAAoB,MAApB,CADY,CAEZ;AACD;AAbH;;AAAA;AAAA,OAAA;;AAAa,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACPb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,mBAAb;AAAA;AAAA;AAIE,mCAAoB,EAApB,EAAmC;AAAA;;AAAf,aAAA,EAAA,GAAA,EAAA;AAAoB;;AAJ1C;AAAA;AAAA,mCAMU;AACN,eAAK,MAAL,GAAc,KAAK,EAAL,CAAQ,KAAR,CAAc;AAC1B,YAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,EAA0B,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAA1B,EAAoD,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAApD,CADgB;AAE1B,YAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,EAA0B,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAA1B,EAAmD,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,EAArB,CAAnD,CAFgB;AAG1B,YAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHe;AAI1B,YAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJgB;AAK1B,YAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CALqB;AAM1B,YAAA,oBAAoB,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CANI;AAO1B,YAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAPc,WAAd,CAAd;AASD;AAhBH;AAAA;AAAA,iCAkBQ;AACJ,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,MAAL,CAAY,KAAxB;AACD;AApBH;;AAAA;AAAA,OAAA;;;;cAI0B,2CAAA,CAAA,aAAA;;;;AAJb,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,8FAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,WAAb;AAAA;AAAA;AAEE,2BAAoB,YAApB,EAA8C;AAAA;;AAA1B,aAAA,YAAA,GAAA,YAAA;AAEpB,aAAA,MAAA,GAAkB,KAAK,YAAL,CAAkB,UAAlB,EAAlB;AAFkD;;AAFpD;AAAA;AAAA,oCAOI,IAPJ,EAQI,KARJ,EAQ8B;AAI1B,cAAI,KAAK,YAAL,CAAkB,QAAlB,KAA+B,EAA/B,IAAqC,KAAK,YAAL,CAAkB,QAAlB,KAA+B,IAApE,IAA4E,KAAK,YAAL,CAAkB,QAAlB,KAA+B,SAA/G,EAAyH;AACvH,YAAA,KAAK,CAAC,6BAAD,CAAL;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AAjBH;;AAAA;AAAA,OAAA;;;;cAEoC,oDAAA,CAAA,cAAA;;;;AAFvB,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHvB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGuB,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHb,QAAa,YAAb;AAAA;AAAA;AAwBE,8BAAA;AAAA;AAAiB;;AAxBnB;AAAA;AAAA,qCAkBY;AACR,cAAI,KAAK,QAAL,KAAkB,EAAlB,IAAwB,KAAK,QAAL,KAAkB,IAA1C,IAAkD,KAAK,QAAL,KAAkB,SAAxE,EAAmF;AACjF,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AAvBH;AAAA;AAAA,4BAIqB;AACjB,iBAAO,KAAK,SAAZ;AACD,SANH;AAAA,0BAOsB,KAPtB,EAO2B;AACvB,eAAK,SAAL,GAAiB,KAAjB;AACD;AATH;AAAA;AAAA,4BAWqB;AACjB,iBAAO,KAAK,SAAZ;AACD,SAbH;AAAA,0BAcsB,KAdtB,EAc2B;AACvB,eAAK,SAAL,GAAiB,KAAjB;AACD;AAhBH;;AAAA;AAAA,OAAA;;AAAa,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHxB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,QAAa,uBAAb;AAAA;AAAA;AAEE,yCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,kCAIY,GAJZ,EAIiB,IAJjB,EAIqB;AACjB,cAAM,KAAK,GAAG,UAAd;AACA,cAAM,YAAY,GAAG,GAAG,CAAC,KAAJ,CAAU;AAC7B,YAAA,UAAU,EAAE;AACV,cAAA,aAAa,mBAAY,KAAZ;AADH;AADiB,WAAV,CAArB;AAMA,iBAAO,IAAI,CAAC,MAAL,CAAY,YAAZ,CAAP;AACD;AAbH;;AAAA;AAAA,OAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHnC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,WAAb;AAAA;AAAA;AAEE,2BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAEpB,aAAA,WAAA,GAAc,gCAAd;AACA,aAAA,YAAA,GAAe,iCAAf;AAEQ,aAAA,aAAA,GAA4B,CAAC;AAAE,UAAA,IAAI,EAAE,OAAR;AAAiB,UAAA,IAAI,EAAE;AAAvB,SAAD,EAA2C;AAAE,UAAA,IAAI,EAAE,QAAR;AAAkB,UAAA,IAAI,EAAE;AAAxB,SAA3C,CAA5B;AACA,aAAA,cAAA,GAA6B,CAAC;AAAE,UAAA,IAAI,EAAE,OAAR;AAAiB,UAAA,IAAI,EAAE;AAAvB,SAAD,EAAkC;AAAE,UAAA,IAAI,EAAE,SAAR;AAAmB,UAAA,IAAI,EAAE;AAAzB,SAAlC,CAA7B;AANiC;;AAF3C;AAAA;AAAA,qCAuBe,MAvBf,EAuB6B;AACzB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAuB,KAAK,WAA5B,EAAyC,MAAzC,CAAP;AACD;AAzBH;AAAA;AAAA,sCA2BgB,OA3BhB,EA2BgC;AAC5B,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAwB,KAAK,YAA7B,EAA2C,OAA3C,CAAP;AACD;AA7BH;AAAA;AAAA,qCA+BY;AACR,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA6B,KAAK,WAAlC,CAAP;AACD;AAjCH;AAAA;AAAA,sCAmCa;AACT,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA8B,KAAK,YAAnC,CAAP;AACD;AArCH;AAAA;AAAA,sCAuCgB,EAvChB,EAuC0B;AACtB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,KAAK,WAAL,GAAmB,EAAzC,CAAP;AACD;AAzCH;AAAA;AAAA,uCA2CiB,EA3CjB,EA2C2B;AACvB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,KAAK,YAAL,GAAoB,EAA3C,CAAP;AACD;AA7CH;AAAA;AAAA,qCA+Ce,MA/Cf,EA+C6B;AACzB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAmB,KAAK,WAAxB,EAAqC,MAArC,CAAP;AACD;AAjDH;AAAA;AAAA,sCAmDgB,OAnDhB,EAmDuB;AACnB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAmB,KAAK,YAAxB,EAAsC,OAAtC,CAAP;AACD;AArDH;AAAA;AAAA,qCAuDe,MAvDf,EAuDqB;AACjB,iBAAO,KAAK,IAAL,CAAU,MAAV,CAAsB,KAAK,WAAL,GAAmB,MAAzC,CAAP;AACD;AAzDH;AAAA;AAAA,sCA2DgB,MA3DhB,EA2DsB;AAClB,iBAAO,KAAK,IAAL,CAAU,MAAV,CAAsB,KAAK,YAAL,GAAoB,MAA1C,CAAP;AACD;AA7DH;AAAA;AAAA,4BAU0B;AACtB,iBAAO,KAAK,cAAZ;AACD,SAZH;AAAA,0BAa2B,KAb3B,EAa4C;AACxC,eAAK,cAAL,GAAsB,KAAtB;AACD;AAfH;AAAA;AAAA,4BAgByB;AACrB,iBAAO,KAAK,aAAZ;AACD,SAlBH;AAAA,0BAmB0B,KAnB1B,EAmB2C;AACvC,eAAK,aAAL,GAAqB,KAArB;AACD;AArBH;;AAAA;AAAA,OAAA;;;;cAE4B,iDAAA,CAAA,YAAA;;;;AAFf,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHvB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGuB,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;ACTb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,eAAb;AAAA;AAAA;AAKE,iCAAA;AAAA;AAAiB;;AALnB;AAAA;AAAA,mCAOU,CACP;AARH;;AAAA;AAAA,OAAA;;AAEW,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,yBAAA,E,MAAA,E,KAAa,CAAb;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAR,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,EAAQ,CAAA,E,yBAAA,E,OAAA,E,KAAc,CAAd;AAHE,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2FAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUb,QAAa,YAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAXxB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,CADD;AAIR,MAAA,YAAY,EAAE,CACZ,qDAAA,CAAA,iBAAA,CADY,CAJN;AAOR,MAAA,OAAO,EAAE,CACP,qDAAA,CAAA,iBAAA,CADO;AAPD,KAAT,CAWwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;ACjBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAE4B,CAF5B,EAEwC;AACpC,cAAM,gBAAgB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C,KAA5C,CAAzB;AAEA,iBAAO,gBAAgB,CAAC,QAAjB,CAA0B,CAAC,CAAC,KAA5B,IAAqC,IAArC,GAA4C;AACjD,YAAA,kBAAkB,EAAE;AAClB,cAAA,KAAK,EAAE;AADW;AAD6B,WAAnD;AAKD;AAVH;;AAAA;AAAA,OAAA;;AAAa,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALpC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,sBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA,C,CAAA;AACA;AACA;;;AAEO,QAAM,WAAW,GAAG;AACzB,MAAA,UAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,QAAI,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAhB,EAA4B;AAC1B,MAAA,MAAA,CAAA,0CAAA,CAAA,gBAAA,CAAA,CAAA;AACD;;AAED,IAAA,MAAA,CAAA,8DAAA,CAAA,wBAAA,CAAA,CAAA,GAAyB,eAAzB,CAAyC,4CAAA,CAAA,WAAA,CAAzC,EACG,KADH,CACS,UAAA,GAAG;AAAA,aAAI,OAAO,CAAC,KAAR,CAAc,GAAd,CAAJ;AAAA,KADZ","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\n<router-outlet></router-outlet>\"","export default \"<p>bulk-create works!</p>\\n\"","export default \"<!-- <p>{{ user | json }}</p> -->\\n<div class=\\\"my-form\\\" *ngIf=\\\"role === 'doctor'\\\">\\n    <h1>Create Doctor</h1>\\n    <hr>\\n    <form [formGroup]=\\\"userForm\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" class=\\\"my-form-input form-control\\\">\\n                <span *ngIf=\\\"username.invalid && username.touched\\\" style=\\\"color: red;\\\">Username cannot be empty<br></span>\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"my-form-input form-control\\\">\\n                <label for=\\\"firstName\\\">First Name</label>\\n                <input type=\\\"text\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" class=\\\"my-form-input form-control\\\">\\n                <label for=\\\"lastName\\\">Last Name</label>\\n                <input type=\\\"text\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"my-form-input form-control\\\">\\n                <label for=\\\"age\\\">Age</label>\\n                <input type=\\\"number\\\" id=\\\"age\\\" formControlName=\\\"age\\\" class=\\\"my-form-input form-control\\\">\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label for=\\\"doctorSpecialisation\\\">Doctor Specialisation</label>\\n                <input type=\\\"text\\\" id=\\\"doctorSpecialisation\\\" formControlName=\\\"doctorSpecialisation\\\" class=\\\"my-form-input form-control\\\">\\n                <label for=\\\"experience\\\">Experience</label>\\n                <input type=\\\"number\\\" id=\\\"experience\\\" formControlName=\\\"experience\\\" class=\\\"my-form-input form-control\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"createDoctor()\\\" [disabled]=\\\"userForm.invalid\\\">Create Doctor</button>\\n    </form>\\n</div>\\n\\n<div class=\\\"my-form\\\" *ngIf=\\\"role === 'patient'\\\">\\n    <h1>Create Patient</h1>\\n    <hr>\\n    <form [formGroup]=\\\"userForm\\\">  \\n        <!-- {{ username.errors | json }} -->\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" id=\\\"username\\\" (focusout)=\\\"testBlur()\\\" formControlName=\\\"username\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!username.errors && username.touched,\\n                    'is-valid': !username.errors\\n                }\\\" required>\\n                <span *ngIf=\\\"username.errors?.required && username.touched\\\" style=\\\"color: red;\\\">\\n                    Username is Required <br>\\n                </span>\\n                <span *ngIf=\\\"username.errors?.minlength && username.touched\\\" style=\\\"color: red;\\\">\\n                    Username is too short.. <br>\\n                </span>\\n                <span *ngIf=\\\"username.touched && username.errors?.maxlength\\\" style=\\\"color: red;\\\">\\n                    Username is too long.. <br>\\n                </span>\\n                <!-- <span *ngIf=\\\"!username.errors\\\" style=\\\"color: green;\\\">\\n                    Username looks fine!\\n                </span> -->\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <!-- {{ password.errors | json }} -->\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"my-form-input form-control\\\"  [ngClass]=\\\"{\\n                    'error': !!password.errors && password.touched,\\n                    'is-valid': !password.errors\\n                }\\\">\\n                <span *ngIf=\\\"password.errors?.required && password.touched\\\" style=\\\"color: red;\\\">\\n                    Password is Required <br>\\n                </span>\\n                <span *ngIf=\\\"password.errors?.minlength && password.touched\\\" style=\\\"color: red;\\\">\\n                    Password is too short.. <br>\\n                </span>\\n                <span *ngIf=\\\"password.touched && password.errors?.maxlength\\\" style=\\\"color: red;\\\">\\n                    Password is too long.. <br>\\n                </span>\\n                <span *ngIf=\\\"!password.errors\\\" style=\\\"color: green;\\\">\\n                    Password looks fine! <br>\\n                </span>\\n                <span *ngIf=\\\"password.errors?.pattern && password.touched\\\" style=\\\"color: red;\\\">\\n                    Password must contain an uppercase, lowercase, number <br>\\n                </span>\\n                <label for=\\\"firstName\\\">First Name</label>\\n                <input type=\\\"text\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" class=\\\"my-form-input form-control\\\"  [ngClass]=\\\"{\\n                    'error': !!firstName.errors && firstName.touched,\\n                    'is-valid': !firstName.errors\\n                }\\\">\\n                <label for=\\\"lastName\\\">Last Name</label>\\n                <input type=\\\"text\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"my-form-input form-control\\\"  [ngClass]=\\\"{\\n                    'error': !!lastName.errors && lastName.touched,\\n                    'is-valid': !lastName.errors\\n                }\\\">\\n                <label for=\\\"age\\\">Age</label>\\n                <input type=\\\"number\\\" id=\\\"age\\\" formControlName=\\\"age\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!age.errors && age.touched,\\n                    'is-valid': !age.errors\\n                }\\\">\\n                <label for=\\\"bloodGroup\\\">Blood Group</label>\\n                <input type=\\\"text\\\" id=\\\"bloodGroup\\\" formControlName=\\\"bloodGroup\\\" class=\\\"my-form-input form-control\\\"  [ngClass]=\\\"{\\n                    'error': !!bloodGroup.errors && bloodGroup.touched,\\n                    'is-valid': !bloodGroup.errors\\n                }\\\">\\n                <span *ngIf=\\\"bloodGroup.touched && bloodGroup.invalid\\\" style=\\\"color: red;\\\">\\n                    Enter the valid Blood Group <br>\\n                </span>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <label for=\\\"patientHeight\\\">Patient Height</label>\\n                <input type=\\\"number\\\" id=\\\"patientHeight\\\" formControlName=\\\"patientHeight\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!patientHeight.errors && patientHeight.touched,\\n                    'is-valid': !patientHeight.errors\\n                }\\\">\\n                <label for=\\\"patientWeight\\\">Patient Weight</label>\\n                <input type=\\\"number\\\" id=\\\"patientWeight\\\" formControlName=\\\"patientWeight\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!patientWeight.errors && patientWeight.touched,\\n                    'is-valid': !patientWeight.errors\\n                }\\\">\\n                <label for=\\\"street\\\">Street</label>\\n                <input type=\\\"text\\\" id=\\\"street\\\" formControlName=\\\"street\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!street.errors && street.touched,\\n                    'is-valid': !street.errors\\n                }\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input type=\\\"text\\\" id=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!city.errors && city.touched,\\n                    'is-valid': !city.errors\\n                }\\\">\\n                <label for=\\\"doorNo\\\">Door No</label>\\n                <input type=\\\"text\\\" id=\\\"doorNo\\\" formControlName=\\\"doorNo\\\" class=\\\"my-form-input form-control\\\" [ngClass]=\\\"{\\n                    'error': !!doorNo.errors && doorNo.touched,\\n                    'is-valid': !doorNo.errors\\n                }\\\">\\n            </div>\\n        </div>\\n        <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" (click)=\\\"createPatient()\\\" [disabled]=\\\"userForm.invalid\\\">Create Patient</button>\\n    </form>\\n</div>\"","export default \"<div *ngIf=\\\"loginService.isLoggedIn()\\\" style=\\\"text-align: center;\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <p [routerLink]=\\\"['doctors']\\\" routerLinkActive=\\\"select\\\" class=\\\"my-btn\\\">doctors</p>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <p [routerLink]=\\\"['patients']\\\" routerLinkActive=\\\"select\\\" class=\\\"my-btn\\\">patients</p>\\n        </div>\\n    </div>\\n\\n    <router-outlet></router-outlet>\\n    \\n <!--   <div class=\\\"dashboard fluid-container\\\">\\n        <table class=\\\"table table-striped table-bordered table-hover mt-3\\\">\\n            <thead *ngIf=\\\"!!users\\\">\\n                <th>S.No</th>\\n                <th>Username</th>\\n                <th>FirstName</th>\\n                <th>LastName</th>\\n                <th *ngIf=\\\"role === 2\\\">Specilization</th>\\n                <th *ngIf=\\\"role === 2\\\">Experience</th>\\n                <th *ngIf=\\\"role === 1\\\">Height</th>\\n                <th *ngIf=\\\"role === 1\\\">Weight</th>\\n                <th>Actions</th>\\n            </thead>\\n            <!-- <app-user *ngFor=\\\"let user of users\\\" [user]=\\\"user\\\"></app-user> -->\\n           <!-- <tbody>\\n                <tr *ngFor=\\\"let user of users; let i=index\\\">\\n                    <td>{{ i+1 }}</td>\\n                    <td>{{ user.username }} <a routerLink=\\\"{{ user.pkUserId }}\\\"> <i class=\\\"fas fa-eye\\\"> </i> </a></td>\\n                    <td>{{ user.firstName }}</td>\\n                    <td>{{ user.lastName }}</td>\\n                    <td *ngIf=\\\"user.fkRoleId === 2\\\">{{ user.doctorSpecialisation }}</td>\\n                    <td *ngIf=\\\"user.fkRoleId === 2\\\">{{ user.experience }}</td>\\n                    <td *ngIf=\\\"user.fkRoleId === 1\\\">{{ user.patientHeight }}</td>\\n                    <td *ngIf=\\\"user.fkRoleId === 1\\\">{{ user.patientWeight }}</td>\\n                    <td>\\n                        <button class=\\\"btn btn-warning text-white\\\" routerLink=\\\"{{ user.pkUserId }}/update\\\"><i class=\\\"far fa-edit\\\" ></i></button>\\n                        &nbsp;\\n                        <button *ngIf=\\\"user.fkRoleId === 1\\\" class=\\\"btn btn-danger text-white\\\" (click)=\\\"deletePatient(user.pkUserId)\\\"><i class=\\\"far fa-trash-alt\\\"></i></button>\\n                        <button *ngIf=\\\"user.fkRoleId === 2\\\" class=\\\"btn btn-danger text-white\\\" (click)=\\\"deleteDoctor(user.pkUserId)\\\">\\n                            <i class=\\\"far fa-trash-alt\\\"></i>\\n                            <!-- <div class=\\\"spinner-grow text-light\\\" role=\\\"status\\\">\\n                                <span class=\\\"sr-only\\\">Loading...</span>\\n                            </div> -->\\n                   <!--     </button>\\n                    </td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        <button class=\\\"btn btn-success\\\" *ngIf=\\\"role === 2\\\" (click)=\\\"createDoctor()\\\">Add Doctor</button>\\n        <button class=\\\"btn btn-success\\\" *ngIf=\\\"role === 1\\\" (click)=\\\"createPatient()\\\">Add Patient</button>\\n    </div> -->\\n</div> \"","export default \"<div class=\\\"dashboard fluid-container\\\">\\n    <table class=\\\"table table-striped table-bordered table-hover mt-3\\\">\\n        <thead *ngIf=\\\"!!doctors\\\">\\n            <th>S.No</th>\\n            <th>Username</th>\\n            <th>FirstName</th>\\n            <th>LastName</th>\\n            <th>Specilization</th>\\n            <th>Experience</th>\\n            <th>Actions</th>\\n        </thead>\\n        <!-- <app-user *ngFor=\\\"let user of users\\\" [user]=\\\"user\\\"></app-user> -->\\n        <tbody>\\n            <tr *ngFor=\\\"let user of doctors; let i=index\\\">\\n                <td>{{ i+1 }}</td>\\n                <td>{{ user.username }} <a routerLink=\\\"{{ user.pkUserId }}\\\"> <i class=\\\"fas fa-eye\\\"> </i> </a></td>\\n                <td>{{ user.firstName }}</td>\\n                <td>{{ user.lastName }}</td>\\n                <td>{{ user.doctorSpecialisation }}</td>\\n                <td>{{ user.experience }}</td>\\n                <td>\\n                    <button \\n                        class=\\\"btn btn-warning text-white\\\" \\n                        routerLink=\\\"/display/doctors/{{ user.pkUserId }}/update\\\">\\n                        <i class=\\\"far fa-edit\\\" ></i>\\n                    </button>\\n                    &nbsp;\\n                    <button \\n                        class=\\\"btn btn-danger text-white\\\" \\n                        (click)=\\\"deleteDoctor(user.pkUserId)\\\">\\n                        <i class=\\\"far fa-trash-alt\\\"></i>\\n                    </button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <app-button [text]=\\\"text\\\" (click)=\\\"createDoctor()\\\"></app-button>\\n    <!-- <button \\n        class=\\\"btn btn-success\\\" \\n        (click)=\\\"createDoctor()\\\">\\n        Add Doctor\\n    </button> -->\\n</div> \"","export default \"<div \\n    class=\\\"dashboard fluid-container\\\">\\n    <table \\n        class=\\\"table table-striped table-bordered table-hover mt-3\\\">\\n        <thead \\n            *ngIf=\\\"!!patients\\\">\\n            <th>S.No</th>\\n            <th>Username</th>\\n            <th>FirstName</th>\\n            <th>LastName</th>\\n            <th>Height</th>\\n            <th>Weight</th>\\n            <th>Actions</th>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let user of patients let i=index\\\">\\n                <td>{{ i+1 }}</td>\\n                <td>{{ user.username }} <a routerLink=\\\"{{ user.pkUserId }}\\\"> <i class=\\\"fas fa-eye\\\"> </i> </a></td>\\n                <td>{{ user.firstName }}</td>\\n                <td>{{ user.lastName }}</td>\\n                <td>{{ user.patientHeight }}</td>\\n                <td>{{ user.patientWeight }}</td>\\n                <td>\\n                    <button \\n                        class=\\\"btn btn-warning text-white\\\" \\n                        routerLink=\\\"/display/patients/{{ user.pkUserId }}/update\\\">\\n                        <i class=\\\"far fa-edit\\\"></i>\\n                    </button>\\n                    &nbsp;\\n                    <button \\n                        class=\\\"btn btn-danger text-white\\\" \\n                        (click)=\\\"deletePatient(user.pkUserId)\\\">\\n                        <i class=\\\"far fa-trash-alt\\\"></i>\\n                    </button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <button \\n        class=\\\"btn btn-success\\\" \\n        (click)=\\\"createPatient()\\\">\\n        Add Patient\\n    </button>\\n</div> \"","export default \"{{ userUpdateForm.value | json}}\\n\\n<form style=\\\"text-align: center;\\\" [formGroup]=\\\"userUpdateForm\\\">\\n  <br>\\n  <div class=\\\"form-group\\\">\\n    <label>\\n      Username <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" disabled>\\n    </label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>\\n      Password <input type=\\\"text\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\">\\n    </label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>\\n      Age <input type=\\\"number\\\" formControlName=\\\"age\\\" class=\\\"form-control\\\">\\n    </label>\\n  </div>\\n  <div *ngIf=\\\"role === 'doctors' || role === 'doctor'\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Specialisation <input type=\\\"text\\\" formControlName=\\\"doctorSpecialisation\\\"\\n          class=\\\"form-control\\\">\\n      </label>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Experience <input type=\\\"number\\\" formControlName=\\\"experience\\\" class=\\\"form-control\\\">\\n      </label>\\n    </div>\\n    <button (click)=\\\"updateDoctor()\\\" class=\\\"btn btn-primary\\\">Update</button>\\n  </div>\\n  <div *ngIf=\\\"role === 'patients' || role === 'patient'\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Height <input type=\\\"number\\\" formControlName=\\\"patientHeight\\\" class=\\\"form-control\\\">\\n      </label>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>\\n        Weight <input type=\\\"number\\\" formControlName=\\\"patientWeight\\\" class=\\\"form-control\\\">\\n      </label>\\n    </div>\\n    <button (click)=\\\"updatePatient()\\\" class=\\\"btn btn-primary\\\">Update</button>\\n  </div>\\n\\n</form>\\n\"","export default \"<!-- <tbody>\\r\\n    <td>{{ user.pkUserId }}</td>\\r\\n    <td>{{ user.username }}</td>\\r\\n    <td>{{ user.firstName }}</td>\\r\\n    <td>{{ user.lastName }}</td>\\r\\n    <td>\\r\\n        <button class=\\\"btn btn-warning text-white\\\" routerLink=\\\"{{ user.pkUserId }}/update\\\"><i class=\\\"far fa-edit\\\" ></i> Edit</button>\\r\\n    </td>\\r\\n</tbody> -->\"","export default \"<!-- As a heading -->\\n<nav class=\\\"navbar navbar-light bg-light\\\">\\n        <span class=\\\"navbar-brand mb-0 h1\\\">HMS</span>\\n        <ul class=\\\"navbar-nav\\\">\\n            <li class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link\\\" *ngIf=\\\"!login.isLoggedIn()\\\" routerLink=\\\"/login\\\">Login</a>\\n                <a class=\\\"nav-link\\\" *ngIf=\\\"login.isLoggedIn()\\\" routerLink=\\\"/display\\\">{{ login.username }}</a>\\n            </li>\\n        </ul>\\n</nav>\\n\"","export default \"<!-- <div  class=\\\"d-flex justify-content-center\\\">\\n\\n\\n    <form>\\n        <h1 class=\\\"d-flex justify-content-center\\\">Login</h1>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n        </div>\\n        \\n        <button type=\\\"submit\\\" (click)=\\\"login()\\\" class=\\\"btn btn-success d-flex justify-content-center\\\">Login</button>\\n    </form>\\n</div> -->\\n\\n\\n<h3 class=\\\"login\\\">Log In</h3>\\n<!-- \\n<div class=\\\"my-form\\\">\\n    <form  (ngSubmit)=\\\"login()\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" ngModel id=\\\"username\\\" name=\\\"username\\\" #usernameInput=\\\"ngModel\\\" class=\\\"my-form-input form-control\\\" placeholder=\\\"Username\\\" required>\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" ngModel id=\\\"password\\\" name=\\\"password\\\" #passwordInput=\\\"ngModel\\\" class=\\\"my-form-input form-control\\\" placeholder=\\\"Password\\\" required>\\n   \\n        <button type=\\\"submit\\\" class=\\\"btn btn-success my-form-button\\\">Login</button>\\n    </form>\\n</div> -->\\n\\n<div class=\\\"my-form\\\">\\n    <form>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" class=\\\"my-form-input form-control\\\" placeholder=\\\"Username\\\" required>\\n\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"my-form-input form-control\\\" placeholder=\\\"Password\\\" required>\\n   \\n        <button type=\\\"submit\\\" (click)=\\\"login()\\\" class=\\\"btn btn-success my-form-button\\\">Login</button>\\n    </form>\\n</div>\"","export default \"<p> <strong>Child: </strong> message from parent: {{ message }}</p>\\n<button (click)=\\\"sendMessage()\\\">Emit</button>\"","export default \"<h1>Parent</h1>\\n<h2>From Child {{ eventMessage }}</h2>\\n<input type=\\\"text\\\" [(ngModel)]=\\\"message\\\">\\n<app-child [message]=\\\"message\\\" (emitter)=\\\"recieve($event)\\\"></app-child>\"","export default \"<form [formGroup]=\\\"myForm\\\">\\n    <input type=\\\"text\\\" formControlName=\\\"username\\\" placeholder=\\\"name\\\" required>\\n    <input type=\\\"text\\\" formControlName=\\\"password\\\" placeholder=\\\"password\\\" required>\\n    <input type=\\\"text\\\" formControlName=\\\"firstName\\\" placeholder=\\\"firstName\\\" required>\\n    <input type=\\\"text\\\" formControlName=\\\"lastName\\\" placeholder=\\\"lastName\\\" required>\\n    <input type=\\\"number\\\" formControlName=\\\"age\\\" placeholder=\\\"age\\\" required>\\n    <input type=\\\"text\\\" formControlName=\\\"doctorSpecialisation\\\" placeholder=\\\"doctorSpecialisation\\\" required>\\n    <input type=\\\"number\\\" formControlName=\\\"experience\\\" placeholder=\\\"experience\\\" required>\\n    <button type=\\\"submit\\\" [disabled]=\\\"myForm.invalid\\\" (click)=\\\"submit()\\\">Submit</button>\\n</form>\"","export default \"<button \\n    type=\\\"text\\\"\\n    class=\\\"btn btn-success\\\">\\n    {{ text }}\\n    <ng-content></ng-content>\\n</button>\"","export default \"<p>custom-validator works!</p>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DisplayComponent } from './display/display.component';\nimport { UpdateComponent } from './display/update/update.component';\nimport { UserComponent } from './display/user/user.component';\nimport { SecureGuard } from './secure.guard';\nimport { CreateComponent } from './create/create.component';\nimport { SampleFormComponent } from './sample-form/sample-form.component';\nimport { ParentComponent } from './play/parent/parent.component';\nimport { DoctorsComponent } from './display/doctors/doctors.component';\nimport { PatientsComponent } from './display/patients/patients.component';\n\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {\n    path: 'display',\n    component: DisplayComponent,\n    canActivate: [SecureGuard],\n    children: [\n      {path: 'doctors', component: DoctorsComponent},\n      {path: 'patients', component: PatientsComponent}\n    ]\n  },\n  {path: 'play', component: ParentComponent},\n  {path: 'display/:role/:id/update', component: UpdateComponent, canActivate: [SecureGuard]},\n  {path: 'display/:role/:id', component: UserComponent, canActivate: [SecureGuard]},\n  {path: 'create/:role', component: CreateComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'HMS-UI';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { DisplayComponent } from './display/display.component';\nimport { UserComponent } from './display/user/user.component';\nimport { UpdateComponent } from './display/update/update.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CreateComponent } from './create/create.component';\nimport { SampleFormComponent } from './sample-form/sample-form.component';\nimport { BulkCreateComponent } from './bulk-create/bulk-create.component';\nimport { CustomValidatorComponent } from './validators/custom-validator/custom-validator.component';\nimport { ParentComponent } from './play/parent/parent.component';\nimport { ChildComponent } from './play/child/child.component';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { DoctorsComponent } from './display/doctors/doctors.component';\nimport { PatientsComponent } from './display/patients/patients.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    DisplayComponent,\n    UserComponent,\n    UpdateComponent,\n    CreateComponent,\n    SampleFormComponent,\n    BulkCreateComponent,\n    CustomValidatorComponent,\n    ParentComponent,\n    ChildComponent,\n    DoctorsComponent,\n    PatientsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgbModule.forRoot()\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2J1bGstY3JlYXRlL2J1bGstY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bulk-create',\n  templateUrl: './bulk-create.component.html',\n  styleUrls: ['./bulk-create.component.scss']\n})\nexport class BulkCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".my-form {\\n  border: 0.5px solid grey;\\n  border-radius: 1%;\\n  margin-left: 30%;\\n  margin-right: 30%;\\n  padding: 10px;\\n  text-align: center;\\n}\\n.my-form-input {\\n  margin-bottom: 10px;\\n}\\n.my-form-button {\\n  margin-left: 40%;\\n  padding-left: 10%;\\n  padding-right: 10%;\\n  border-radius: 5%;\\n}\\n.error {\\n  color: red;\\n}\\n.success {\\n  color: green;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlL0M6XFxVc2Vyc1xcVkNcXERlc2t0b3BcXEhNUy1VSS9zcmNcXGFwcFxcY3JlYXRlXFxjcmVhdGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx3QkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtBQ0NKO0FEQ0k7RUFDSSxtQkFBQTtBQ0NSO0FERUk7RUFDSSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQ0FSO0FES0E7RUFDSSxVQUFBO0FDRko7QURLQTtFQUNJLFlBQUE7QUNGSiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS9jcmVhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXktZm9ybSB7XHJcbiAgICBib3JkZXI6IDAuNXB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBcclxuICAgICYtaW5wdXQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1idXR0b24ge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0MCU7XHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxMCU7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTAlO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUlO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG59XHJcblxyXG4uZXJyb3Ige1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuLnN1Y2Nlc3Mge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG59IiwiLm15LWZvcm0ge1xuICBib3JkZXI6IDAuNXB4IHNvbGlkIGdyZXk7XG4gIGJvcmRlci1yYWRpdXM6IDElO1xuICBtYXJnaW4tbGVmdDogMzAlO1xuICBtYXJnaW4tcmlnaHQ6IDMwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLm15LWZvcm0taW5wdXQge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuLm15LWZvcm0tYnV0dG9uIHtcbiAgbWFyZ2luLWxlZnQ6IDQwJTtcbiAgcGFkZGluZy1sZWZ0OiAxMCU7XG4gIHBhZGRpbmctcmlnaHQ6IDEwJTtcbiAgYm9yZGVyLXJhZGl1czogNSU7XG59XG5cbi5lcnJvciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5zdWNjZXNzIHtcbiAgY29sb3I6IGdyZWVuO1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Doctor } from '../models/doctor.model';\nimport { Patient } from '../models/doctors.model';\nimport { UserService } from '../services/user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidatorComponent } from '../validators/custom-validator/custom-validator.component';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n\n  userForm: FormGroup;\n  role: string;\n  doctor: Doctor;\n  patient: Patient;\n  res: any;\n\n  constructor(private router: ActivatedRoute, private userService: UserService, private route: Router, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.router.params.subscribe(pathParams => this.role = pathParams.role);\n    if (this.role === 'doctor') {\n      this.doctor = new Doctor();\n      this.userForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        age: ['', Validators.required],\n        doctorSpecialisation: ['', Validators.required],\n        experience: ['', Validators.required],\n      });\n    } else if (this.role === 'patient') {\n      this.patient = new Patient();\n\n      this.userForm = this.fb.group({\n        username: ['', [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.maxLength(25),\n        ]],\n        password: ['', [\n          Validators.required,\n          Validators.pattern('^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([a-zA-Z0-9]+)$'),\n        ]],\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        age: ['', Validators.required],\n        patientHeight: ['', Validators.required],\n        patientWeight: ['', Validators.required],\n        street: ['', Validators.required],\n        city: ['', Validators.required],\n        doorNo: ['', Validators.required],\n        bloodGroup: ['', [\n          Validators.required,\n          CustomValidatorComponent.validateBloodGroup,\n        ]],\n      });\n    }\n  }\n\n  get username() {\n    return this.userForm.get('username');\n  }\n\n  get password() {\n    return this.userForm.get('password');\n  }\n\n  get firstName() {\n    return this.userForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.userForm.get('lastName');\n  }\n\n  get age() {\n    return this.userForm.get('age');\n  }\n\n  get doctorSpecialisation() {\n    return this.userForm.get('doctorSpecialisation');\n  }\n\n  get experience() {\n    return this.userForm.get('experience');\n  }\n\n  get patientHeight() {\n    return this.userForm.get('patientHeight');\n  }\n\n  get patientWeight() {\n    return this.userForm.get('patientWeight');\n  }\n\n  get street() {\n    return this.userForm.get('street');\n  }\n\n  get city() {\n    return this.userForm.get('password');\n  }\n\n  get doorNo() {\n    return this.userForm.get('doorNo');\n  }\n\n  get bloodGroup() {\n    return this.userForm.get('bloodGroup');\n  }\n\n  testBlur() {\n    console.log(\"Username Blurred!\");\n  }\n\n  createDoctor() {\n    const values = this.userForm.value;\n\n    this.doctor.username = values.username;\n    this.doctor.password = values.password;\n    this.doctor.firstName = values.firstName;\n    this.doctor.lastName = values.lastName;\n    this.doctor.age = values.age;\n    this.doctor.doctorSpecialisation = values.doctorSpecialisation;\n    this.doctor.experience = values.experience;\n\n    console.log(this.doctor);\n    this.userService.createDoctor(this.doctor).subscribe(data => {\n      this.res = data;\n      this.route.navigateByUrl('display/doctors');\n    });\n    console.log(values);\n  }\n\n  createPatient() {\n    const values = this.userForm.value;\n\n    this.patient.username = values.username;\n    this.patient.password = values.password;\n    this.patient.firstName = values.firstName;\n    this.patient.lastName = values.lastName;\n    this.patient.age = values.age;\n    this.patient.patientHeight = values.patientHeight;\n    this.patient.patientWeight = values.patientWeight;\n    this.patient.street = values.street;\n    this.patient.city = values.city;\n    this.patient.doorNo = values.doorNo;\n    this.patient.bloodGroup = values.bloodGroup, [];\n\n    console.log(this.patient);\n    this.userService.createPatient(this.patient).subscribe(data => {\n        this.res = data;\n        this.route.navigateByUrl('/display/patients');\n      });\n    console.log(values);\n  }\n\n  validateBloodGroup(c: FormGroup) {\n    const validBloodGroups = ['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-'];\n\n    return validBloodGroups.includes(c.value) ? null : {\n      validateBloodGroup: {\n        valid: false,\n      }\n    };\n  }\n\n}\n","export default \".select {\\n  background-color: black;\\n  color: blanchedalmond;\\n}\\n\\n.my-btn {\\n  margin-top: 5%;\\n  margin-right: 30%;\\n  margin-left: 30%;\\n  cursor: pointer;\\n  padding: 10px 20px;\\n  border: 2px solid black;\\n  border-radius: 5%;\\n}\\n\\n.dashboard {\\n  margin: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzcGxheS9DOlxcVXNlcnNcXFZDXFxEZXNrdG9wXFxITVMtVUkvc3JjXFxhcHBcXGRpc3BsYXlcXGRpc3BsYXkuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rpc3BsYXkvZGlzcGxheS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsdUJBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVBO0VBRUksVUFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvZGlzcGxheS9kaXNwbGF5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGNvbG9yOiBibGFuY2hlZGFsbW9uZDtcclxufVxyXG5cclxuLm15LWJ0biB7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxuICAgIG1hcmdpbi1yaWdodDogMzAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNSU7XHJcbn1cclxuXHJcbi5kYXNoYm9hcmQge1xyXG4gICAgLy8gYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBtYXJnaW46IDIlO1xyXG59IiwiLnNlbGVjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBjb2xvcjogYmxhbmNoZWRhbG1vbmQ7XG59XG5cbi5teS1idG4ge1xuICBtYXJnaW4tdG9wOiA1JTtcbiAgbWFyZ2luLXJpZ2h0OiAzMCU7XG4gIG1hcmdpbi1sZWZ0OiAzMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLXJhZGl1czogNSU7XG59XG5cbi5kYXNoYm9hcmQge1xuICBtYXJnaW46IDIlO1xufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { LoginService } from '../services/login.service';\nimport { UserService } from '../services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.scss']\n})\nexport class DisplayComponent implements OnInit {\n  users: any;\n\n  role: number;\n\n  username: string = this.loginService.username;\n  password: string = this.loginService.password;\n\n  constructor(\n    private loginService: LoginService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    \n  }\n\n  // createDoctor() {\n  //   this.router.navigate(['create/doctor']);\n  // }\n\n  // createPatient() {\n  //   this.router.navigate(['create/patient']);\n  // }\n\n  // getDoctors() {\n  //   this.userService.getDoctors().subscribe(data => {\n  //     this.users = data;\n  //   });\n  //   this.role = 2;\n  // }\n\n  // getPatients() {\n  //   this.userService.getPatients().subscribe(data => {\n  //     this.users = data;\n  //   });\n  //   this.role = 1;\n  // }\n\n  // deleteDoctor(userId) {\n  //   const confirm = prompt(\n  //     `Are you sure you want to delete doctor with id ${userId} (type: yes (or) no)`\n  //   );\n  //   if (confirm.toLowerCase() === 'yes') {\n  //     this.userService.deleteDoctor(userId).subscribe(data => {\n  //       console.log(data);\n  //       this.getDoctors();\n  //     });\n  //   }\n  // }\n\n  // deletePatient(userId) {\n  //   const confirm = prompt(\n  //     `Are you sure you want to delete patient with id ${userId} (type: yes (or) no)`\n  //   );\n  //   if (confirm.toLowerCase() === 'yes') {\n  //     this.userService.deletePatient(userId).subscribe(data => {\n  //       console.log(data);\n  //       this.getPatients();\n  //     });\n  //   }\n  // }\n}\n","export default \".select {\\n  background-color: black;\\n  color: blanchedalmond;\\n}\\n\\n.my-btn {\\n  margin-top: 5%;\\n  margin-right: 30%;\\n  margin-left: 30%;\\n  cursor: pointer;\\n  padding: 10px 20px;\\n  border: 2px solid black;\\n  border-radius: 5%;\\n}\\n\\n.dashboard {\\n  margin: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzcGxheS9kb2N0b3JzL0M6XFxVc2Vyc1xcVkNcXERlc2t0b3BcXEhNUy1VSS9zcmNcXGFwcFxcZGlzcGxheVxcZG9jdG9yc1xcZG9jdG9ycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZGlzcGxheS9kb2N0b3JzL2RvY3RvcnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx1QkFBQTtFQUNBLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHVCQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURFQTtFQUVJLFVBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BsYXkvZG9jdG9ycy9kb2N0b3JzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGNvbG9yOiBibGFuY2hlZGFsbW9uZDtcclxufVxyXG5cclxuLm15LWJ0biB7XHJcbiAgICBtYXJnaW4tdG9wOiA1JTtcclxuICAgIG1hcmdpbi1yaWdodDogMzAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwJTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNSU7XHJcbn1cclxuXHJcbi5kYXNoYm9hcmQge1xyXG4gICAgLy8gYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBtYXJnaW46IDIlO1xyXG59IiwiLnNlbGVjdCB7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBjb2xvcjogYmxhbmNoZWRhbG1vbmQ7XG59XG5cbi5teS1idG4ge1xuICBtYXJnaW4tdG9wOiA1JTtcbiAgbWFyZ2luLXJpZ2h0OiAzMCU7XG4gIG1hcmdpbi1sZWZ0OiAzMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCBibGFjaztcbiAgYm9yZGVyLXJhZGl1czogNSU7XG59XG5cbi5kYXNoYm9hcmQge1xuICBtYXJnaW46IDIlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router } from '@angular/router';\nimport { Doctor } from 'src/app/models/doctor.model';\n\n@Component({\n  selector: 'app-doctors',\n  templateUrl: './doctors.component.html',\n  styleUrls: ['./doctors.component.scss']\n})\nexport class DoctorsComponent implements OnInit {\n\n  doctors: Doctor[];\n\n  text = 'Add Doctor';\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getDoctors();\n  }\n\n  createDoctor() {\n    this.router.navigateByUrl('create/doctor');\n  }\n\n  getDoctors() {\n    this.userService.getDoctors().subscribe(data => {\n      this.doctors = data;\n    });\n  }\n\n  deleteDoctor(userId) {\n    const confirm = prompt(\n      `Are you sure you want to delete doctor with id ${userId} (type: yes (or) no)`\n    );\n    if (confirm.toLowerCase() === 'yes') {\n      this.userService.deleteDoctor(userId).subscribe(data => {\n        console.log(data);\n        this.getDoctors();\n      });\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BsYXkvcGF0aWVudHMvcGF0aWVudHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Patient } from 'src/app/models/doctors.model';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.component.html',\n  styleUrls: ['./patients.component.scss']\n})\nexport class PatientsComponent implements OnInit {\n\n  patients: Patient[];\n\n  constructor(\n    private userService: UserService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getPatients();\n  }\n\n  createPatient() {\n    this.router.navigate(['create/patient']);\n  }\n\n  getPatients() {\n    this.userService.getPatients().subscribe(data => {\n      this.patients = data;\n    });\n  }\n\n  deletePatient(userId) {\n    const confirm = prompt(\n      `Are you sure you want to delete patient with id ${userId} (type: yes (or) no)`\n    );\n    if (confirm.toLowerCase() === 'yes') {\n      this.userService.deletePatient(userId).subscribe(data => {\n        console.log(data);\n        this.getPatients();\n      });\n    }\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BsYXkvdXBkYXRlL3VwZGF0ZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Doctor } from 'src/app/models/doctor.model';\nimport { Patient } from 'src/app/models/doctors.model';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.scss']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: ActivatedRoute, private route: Router, private fb: FormBuilder) { }\n\n  userId: number;\n  role: string;\n  user: Doctor | Patient;\n  res: any = null;\n  userUpdateForm: FormGroup;\n\n  ngOnInit() {\n    this.router.params.subscribe(pathParams => {\n      this.userId = pathParams.id;\n      this.role = pathParams.role;\n      console.log(this.userId);\n      console.log(this.role);\n\n      if (this.role.toLowerCase() === 'doctors' || this.role.toLowerCase() === 'doctor') {\n        this.userService.getDoctorById(this.userId.toString()).subscribe(data => {\n          console.log(data);\n          this.userUpdateForm = this.fb.group({\n            username: data.username,\n            password: data.password,\n            age: data.age,\n            doctorSpecialisation: data.doctorSpecialisation,\n            experience: data.experience,\n          });\n        });\n      } else if ((this.role.toLowerCase() === 'patients' || this.role.toLowerCase() === 'patient')) {\n        this.userService.getPatientById(this.userId.toString()).subscribe(data => {\n          console.log(data);\n          this.userUpdateForm = this.fb.group({\n            username: data.username,\n            password: data.password,\n            age: data.age,\n            patientHeight: data.patientHeight,\n            patientWeight: data.patientWeight,\n          });\n        });\n      }\n    });\n\n    // console.log(this.user);\n  }\n\n  updateDoctor() {\n    const values = this.userUpdateForm.value;\n    this.user = new Doctor();\n    this.user.username = values.username;\n    this.user.password = values.password;\n    this.user.age = values.age;\n    this.user.doctorSpecialisation = values.doctorSpecialisation;\n    this.user.experience = values.experience;\n    this.user.fkRoleId = 2;\n    this.user.pkUserId = this.userId;\n\n    console.log(values);\n    console.log(this.user);\n\n    this.userService.updateDoctor(this.user as Doctor).subscribe(data => {\n      this.res = data;\n      this.route.navigateByUrl('display/doctors');\n    });\n  }\n\n  updatePatient() {\n    const values = this.userUpdateForm.value;\n    this.user = new Patient();\n    this.user.username = values.username;\n    this.user.password = values.password;\n    this.user.age = values.age;\n    this.user.patientHeight = values.patientHeight;\n    this.user.patientWeight = values.patientWeight;\n    this.user.fkRoleId = 1;\n    this.user.pkUserId = this.userId;\n\n    console.log(values);\n    console.log(this.user);\n\n    this.userService.updatePatient(this.user as Patient).subscribe(data => {\n      this.res = data;\n      this.route.navigateByUrl('display/patients');\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3BsYXkvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  @Input() user: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private login: LoginService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"body {\\n  text-align: center;\\n}\\n\\n.my-form {\\n  border: 0.5px solid grey;\\n  border-radius: 1%;\\n  margin-left: 30%;\\n  margin-right: 30%;\\n  padding: 10px;\\n}\\n\\n.my-form-input {\\n  margin-bottom: 10px;\\n}\\n\\n.my-form-button {\\n  margin-left: 40%;\\n  padding-left: 10%;\\n  padding-right: 10%;\\n  border-radius: 5%;\\n}\\n\\n.login {\\n  margin-top: 8.5%;\\n  margin-left: 45%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxWQ1xcRGVza3RvcFxcSE1TLVVJL3NyY1xcYXBwXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUNDSjs7QURFQTtFQUNJLHdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtBQ0NKOztBREVJO0VBQ0ksbUJBQUE7QUNBUjs7QURHSTtFQUNJLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0FDRFI7O0FETUE7RUFDSSxnQkFBQTtFQUNBLGdCQUFBO0FDSEoiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubXktZm9ybSB7XHJcbiAgICBib3JkZXI6IDAuNXB4IHNvbGlkIGdyZXk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDMwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcblxyXG4gICAgXHJcbiAgICAmLWlucHV0IHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtYnV0dG9uIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogNDAlO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTAlO1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDEwJTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1JTtcclxuICAgICAgICBcclxuICAgIH1cclxufVxyXG5cclxuLmxvZ2luIHtcclxuICAgIG1hcmdpbi10b3A6IDguNSU7XHJcbiAgICBtYXJnaW4tbGVmdDogNDUlO1xyXG59XHJcbiIsImJvZHkge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5teS1mb3JtIHtcbiAgYm9yZGVyOiAwLjVweCBzb2xpZCBncmV5O1xuICBib3JkZXItcmFkaXVzOiAxJTtcbiAgbWFyZ2luLWxlZnQ6IDMwJTtcbiAgbWFyZ2luLXJpZ2h0OiAzMCU7XG4gIHBhZGRpbmc6IDEwcHg7XG59XG4ubXktZm9ybS1pbnB1dCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG4ubXktZm9ybS1idXR0b24ge1xuICBtYXJnaW4tbGVmdDogNDAlO1xuICBwYWRkaW5nLWxlZnQ6IDEwJTtcbiAgcGFkZGluZy1yaWdodDogMTAlO1xuICBib3JkZXItcmFkaXVzOiA1JTtcbn1cblxuLmxvZ2luIHtcbiAgbWFyZ2luLXRvcDogOC41JTtcbiAgbWFyZ2luLWxlZnQ6IDQ1JTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  username: string;\n  password: string;\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.loginService.username = this.username;\n    this.loginService.password = this.password;\n    this.router.navigate(['/display']);\n  }\n}\n","export class Doctor {\r\n    pkUserId: number;\r\n    fkRoleId: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    age: number;\r\n    pkDoctorId: number;\r\n    experience: number;\r\n    doctorSpecialisation: string;\r\n    patients: Array<any>;\r\n}","// Generated by https://quicktype.io\r\n\r\nexport class Doctors {\r\n    status: number;\r\n    data: Doctor[];\r\n}\r\n\r\nexport class Doctor {\r\n    pkUserId: number;\r\n    fkRoleId: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    age: number;\r\n    pkDoctorId: number;\r\n    experience: number;\r\n    doctorSpecialisation: string;\r\n    patients: Patient[];\r\n}\r\n\r\nexport class Patient {\r\n    pkUserId: number;\r\n    fkRoleId: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    age: number;\r\n    pkPatientId: number;\r\n    patientHeight: number;\r\n    patientWeight: number;\r\n    street: string;\r\n    city: string;\r\n    doorNo: string;\r\n    bloodGroup: string;\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYXkvY2hpbGQvY2hpbGQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-child',\n  templateUrl: './child.component.html',\n  styleUrls: ['./child.component.scss']\n})\nexport class ChildComponent implements OnInit {\n\n  @Input() message: string;\n  @Output() emitter = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  sendMessage() {\n    this.emitter.emit(this.message);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYXkvcGFyZW50L3BhcmVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.scss']\n})\nexport class ParentComponent implements OnInit {\n\n  message: string;\n  eventMessage: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  recieve($event) {\n    this.eventMessage = $event;\n    // alert($event);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhbXBsZS1mb3JtL3NhbXBsZS1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Doctor } from '../models/doctor.model';\n\n@Component({\n  selector: 'app-sample-form',\n  templateUrl: './sample-form.component.html',\n  styleUrls: ['./sample-form.component.scss']\n})\nexport class SampleFormComponent implements OnInit {\n\n  myForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      username: ['', Validators.required, Validators.maxLength(25), Validators.minLength(6)],\n      password: ['', Validators.required, Validators.minLength(5), Validators.maxLength(25)],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      age: ['', Validators.required],\n      doctorSpecialisation: ['', Validators.required],\n      experience: ['', Validators.required],\n    });\n  }\n\n  submit() {\n    console.log(this.myForm.value);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecureGuard implements CanActivate {\n\n  constructor(private loginService: LoginService) {}\n\n  status: boolean = this.loginService.isLoggedIn();\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (this.loginService.username === '' || this.loginService.username === null || this.loginService.username === undefined){\n      alert('Login to use this feature!!');\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private _username;\n  private _password;\n\n  public get username() {\n    return this._username;\n  }\n  public set username(value) {\n    this._username = value;\n  }\n\n  public get password() {\n    return this._password;\n  }\n  public set password(value) {\n    this._password = value;\n  }\n\n  isLoggedIn() {\n    if (this.username === '' || this.username === null || this.username === undefined) {\n      return false;\n    }\n    return true;\n  }\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req, next) {\n    const token = 'xx.yy.zz';\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      }\n    });\n\n    return next.handle(tokenizedReq);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Doctor } from '../models/doctor.model';\nimport { Patient } from '../models/doctors.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  DOCTORS_URL = 'http://localhost:8080/doctors/';\n  PATIENTS_URL = 'http://localhost:8080/patients/';\n\n  private _listOfDoctor: Array<any> = [{ name: 'Ashok', data: 'Opthamologist' }, { name: 'Swetha', data: 'Dentist' }];\n  private _listOfPatient: Array<any> = [{ name: 'Rahul', data: 'Cold' }, { name: 'Kishore', data: 'Fever' }];\n\n  public get listOfPatient(): Array<any> {\n    return this._listOfPatient;\n  }\n  public set listOfPatient(value: Array<any>) {\n    this._listOfPatient = value;\n  }\n  public get listOfDoctor(): Array<any> {\n    return this._listOfDoctor;\n  }\n  public set listOfDoctor(value: Array<any>) {\n    this._listOfDoctor = value;\n  }\n\n  createDoctor(doctor: Doctor): Observable<any> {\n    return this.http.post<Doctor>(this.DOCTORS_URL, doctor);\n  }\n\n  createPatient(patient: Patient): Observable<any> {\n    return this.http.post<Patient>(this.PATIENTS_URL, patient);\n  }\n\n  getDoctors(): Observable<Array<Doctor>> {\n    return this.http.get<Array<Doctor>>(this.DOCTORS_URL);\n  }\n\n  getPatients(): Observable<Array<Patient>> {\n    return this.http.get<Array<Patient>>(this.PATIENTS_URL);\n  }\n\n  getDoctorById(id: string): Observable<Doctor> {\n    return this.http.get<Doctor>(this.DOCTORS_URL + id);\n  }\n\n  getPatientById(id: string): Observable<Patient> {\n    return this.http.get<Patient>(this.PATIENTS_URL + id);\n  }\n\n  updateDoctor(doctor: Doctor): Observable<any> {\n    return this.http.put<any>(this.DOCTORS_URL, doctor);\n  }\n\n  updatePatient(patient): Observable<any> {\n    return this.http.put<any>(this.PATIENTS_URL, patient);\n  }\n\n  deleteDoctor(userId): Observable<any> {\n    return this.http.delete<any>(this.DOCTORS_URL + userId);\n  }\n\n  deletePatient(userId): Observable<any> {\n    return this.http.delete<any>(this.PATIENTS_URL + userId);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9idXR0b24vYnV0dG9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input() text: string;\n  @Input() color: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button/button.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ButtonComponent,\n  ],\n  exports: [\n    ButtonComponent,\n  ]\n})\nexport class SharedModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZhbGlkYXRvcnMvY3VzdG9tLXZhbGlkYXRvci9jdXN0b20tdmFsaWRhdG9yLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-custom-validator',\n  templateUrl: './custom-validator.component.html',\n  styleUrls: ['./custom-validator.component.scss']\n})\nexport class CustomValidatorComponent {\n\n  static validateBloodGroup(c: FormGroup) {\n    const validBloodGroups = ['A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-'];\n\n    return validBloodGroups.includes(c.value) ? null : {\n      validateBloodGroup: {\n        valid: false,\n      }\n    };\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}